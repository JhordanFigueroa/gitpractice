eGIT COMMANDS: Cheat Sheet of commands: https://www.freecodecamp.org/news/git-cheat-sheet/
git status
git add .
git add file names
git commit -m "description"
git push -u origin main = -u is to setup upstream - don't have to keep using can just use git push after setting upstream

git checkout -b test => switch branches and make a new branch
git checkout branchname => switch branches
git merge branchname - merge with branchname 

git pull origin branchname
git branch -d branchaname = delete branch 
git commit -am "description" => adding modified files, won't work for newly created files
git reset filename - unstaging file 
git reset hashofcommit 
git rest --hard hashofcommit
git clone URL - clone repo into local machine
git log 
git log --oneline => list of git commits descriptions 
git diff branchname => shows the differences in the code


Linux Commands:
ls | grep name - searches for name 
rm -rf foldername - remove
pwd - current directory 


Create Virtual Environment:
virtualenv -p python3 . - create venv with python3
source bin/activate - activate venv
deactivate
python3 -m venv tutorial-env
source tutorial-env/bin/activate

Django:
pip install django==version
mkdir src
django-admin startproject trydjango .
python manage.py startserver    
python manage.py migrate - migrate settings with project - hook up database and Django 
python manage.py createsuperuser 
python manage.py startapp appname - creates a new app in django
python manage.py makemigrations - to update changes to django project 
python manage.py migrate - run in conjuction with makemigrations
python manage.py shell - run django scripts from shell
Product.objects.create(title='SD summary', description='automatic summaries', price='free', summary='send it')
exit() - exit shell

Grab Data:
python manage.py shell
from products.models import Product
Product.objects.get(id=1)
obj = Product.objects.get(id=1)
dir(obj)
obj.title


